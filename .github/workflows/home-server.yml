name: Deploy SAE Enfermagem to Home Server

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'comandos.txt'
  workflow_dispatch:

jobs:
  deploy:
    name: ÔøΩ Deploy SAE Enfermagem
    runs-on: ubuntu-latest
    
    steps:
      - name: üöö Checkout
        uses: actions/checkout@v4

      - name: ‚òÅÔ∏è Setup Cloudflare
        run: |
          wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb

      - name: üîë Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.HOME_SERVER_SSH_KEY }}

      - name: ÔøΩ Deploy to Server
        run: |
          # Transferir arquivos
          rsync -avz --delete \
                --exclude '.git' \
                --exclude '.github' \
                --exclude '__pycache__' \
                --exclude '*.pyc' \
                --exclude '.env' \
                -e "ssh -o StrictHostKeyChecking=no -o ProxyCommand='cloudflared access ssh --hostname %h'" \
                ./ leonardovieiraxy@ssh.leoproti.com.br:/home/leonardovieiraxy/projetos/sae-enfermagem-django/
          
          # Deploy
          ssh -o StrictHostKeyChecking=no -o ProxyCommand="cloudflared access ssh --hostname %h" \
              leonardovieiraxy@ssh.leoproti.com.br << 'EOF'
            cd /home/leonardovieiraxy/projetos/sae-enfermagem-django
            
            # Parar container se estiver rodando
            docker compose down 2>/dev/null || true
            
            # Build e iniciar
            docker compose up -d --build
            
            # Verificar status
            echo "‚úÖ Container status:"
            docker compose ps
            
            # Teste r√°pido
            sleep 5
            if curl -s -o /dev/null -w "%{http_code}" http://localhost:8002 | grep -q "200\|302\|403"; then
              echo "‚úÖ SAE Enfermagem est√° rodando!"
            else
              echo "‚ö†Ô∏è  Verificar logs:"
              docker compose logs --tail=10
            fi
          EOF
